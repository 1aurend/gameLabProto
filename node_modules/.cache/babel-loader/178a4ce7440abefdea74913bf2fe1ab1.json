{"ast":null,"code":"var _jsxFileName = \"/Users/phil/Development/gameLabProto/src/components/homepage/NavSwitch.js\";\nimport React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Playtest from '../subpages/Playtest.js';\nimport Examples from '../subpages/Examples.js';\nimport Seminar from '../subpages/Seminar.js';\nimport MechanicsGrid from '../mechanics/MechanicsGrid.js';\nimport Home from './Home.js';\nimport ToolsDemo from '../subpages/ToolsDemo.js';\nimport Tetrad from '../subpages/Tetrad.js';\n\nvar NavSwitch = function NavSwitch() {\n  return React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: Home,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/mechanics\",\n    render: function render(props) {\n      return React.createElement(MechanicsGrid, Object.assign({}, props, {\n        mechanic: 'mechanics',\n        backgroundColor: '#dd3d27',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/mechanics/\",\n    render: function render(props) {\n      return React.createElement(MechanicsGrid, Object.assign({}, props, {\n        mechanic: 'mechanics',\n        backgroundColor: '#dd3d27',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/mechanics/time\",\n    render: function render(props) {\n      return React.createElement(MechanicsGrid, Object.assign({}, props, {\n        mechanic: 'time',\n        backgroundColor: '#dd3d27',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/mechanics/space\",\n    render: function render(props) {\n      return React.createElement(MechanicsGrid, Object.assign({}, props, {\n        mechanic: 'space',\n        backgroundColor: '#dd3d27',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/mechanics/chance\",\n    render: function render(props) {\n      return React.createElement(MechanicsGrid, Object.assign({}, props, {\n        mechanic: 'chance',\n        backgroundColor: '#dd3d27',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/mechanics/challenge\",\n    render: function render(props) {\n      return React.createElement(MechanicsGrid, Object.assign({}, props, {\n        mechanic: 'challenge',\n        backgroundColor: '#dd3d27',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/mechanics/multiplayer\",\n    render: function render(props) {\n      return React.createElement(MechanicsGrid, Object.assign({}, props, {\n        mechanic: 'multiplayer',\n        backgroundColor: '#dd3d27',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/mechanics/action\",\n    render: function render(props) {\n      return React.createElement(MechanicsGrid, Object.assign({}, props, {\n        mechanic: 'action',\n        backgroundColor: '#dd3d27',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/mechanics/strategy\",\n    render: function render(props) {\n      return React.createElement(MechanicsGrid, Object.assign({}, props, {\n        mechanic: 'strategy',\n        backgroundColor: '#dd3d27',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/mechanics/training\",\n    render: function render(props) {\n      return React.createElement(MechanicsGrid, Object.assign({}, props, {\n        mechanic: 'training',\n        backgroundColor: '#dd3d27',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/seminar\",\n    component: Seminar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/examples\",\n    component: Examples,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/tools\",\n    component: ToolsDemo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/tools/playtest\",\n    component: Playtest,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/tools/tetrad\",\n    component: Tetrad,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/tools/challenges\",\n    render: function render(props) {\n      return React.createElement(MechanicsGrid, Object.assign({}, props, {\n        dChallenges: true,\n        backgroundColor: '#30AEA4',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/tools/challenges/time\",\n    render: function render(props) {\n      return React.createElement(MechanicsGrid, Object.assign({}, props, {\n        dChallenges: true,\n        mechanic: 'time',\n        backgroundColor: '#30AEA4',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/tools/challenges/space\",\n    render: function render(props) {\n      return React.createElement(MechanicsGrid, Object.assign({}, props, {\n        dChallenges: true,\n        mechanic: 'space',\n        backgroundColor: '#30AEA4',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/tools/challenges/chance\",\n    render: function render(props) {\n      return React.createElement(MechanicsGrid, Object.assign({}, props, {\n        dChallenges: true,\n        mechanic: 'chance',\n        backgroundColor: '#30AEA4',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/tools/challenges/action\",\n    render: function render(props) {\n      return React.createElement(MechanicsGrid, Object.assign({}, props, {\n        dChallenges: true,\n        mechanic: 'action',\n        backgroundColor: '#30AEA4',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/tools/challenges/challenge\",\n    render: function render(props) {\n      return React.createElement(MechanicsGrid, Object.assign({}, props, {\n        dChallenges: true,\n        mechanic: 'challenge',\n        backgroundColor: '#30AEA4',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/tools/challenges/strategy\",\n    render: function render(props) {\n      return React.createElement(MechanicsGrid, Object.assign({}, props, {\n        dChallenges: true,\n        mechanic: 'strategy',\n        backgroundColor: '#30AEA4',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/tools/challenges/multiplayer\",\n    render: function render(props) {\n      return React.createElement(MechanicsGrid, Object.assign({}, props, {\n        dChallenges: true,\n        mechanic: 'multiplayer',\n        backgroundColor: '#30AEA4',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/tools/challenges/training\",\n    render: function render(props) {\n      return React.createElement(MechanicsGrid, Object.assign({}, props, {\n        dChallenges: true,\n        mechanic: 'training',\n        backgroundColor: '#30AEA4',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }));\n};\n\nexport default NavSwitch;","map":{"version":3,"sources":["/Users/phil/Development/gameLabProto/src/components/homepage/NavSwitch.js"],"names":["React","Switch","Route","Playtest","Examples","Seminar","MechanicsGrid","Home","ToolsDemo","Tetrad","NavSwitch","props"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Playtest from '../subpages/Playtest.js';\nimport Examples from '../subpages/Examples.js';\nimport Seminar from '../subpages/Seminar.js';\nimport MechanicsGrid from '../mechanics/MechanicsGrid.js';\nimport Home from './Home.js'\nimport ToolsDemo from '../subpages/ToolsDemo.js'\nimport Tetrad from '../subpages/Tetrad.js'\n\n\nconst NavSwitch = () => (\n\n    <Switch>\n\n      <Route exact path='/' component={Home}/>\n\n      <Route exact path='/mechanics' render={(props) => <MechanicsGrid {...props} mechanic={'mechanics'} backgroundColor={'#dd3d27'}/>} />\n      <Route exact path='/mechanics/' render={(props) => <MechanicsGrid {...props} mechanic={'mechanics'} backgroundColor={'#dd3d27'}/>} />\n\n      <Route path='/mechanics/time' render={(props) => <MechanicsGrid {...props} mechanic={'time'} backgroundColor={'#dd3d27'}/>} />\n      <Route path='/mechanics/space' render={(props) => <MechanicsGrid {...props} mechanic={'space'} backgroundColor={'#dd3d27'}/>} />\n      <Route path='/mechanics/chance' render={(props) => <MechanicsGrid {...props} mechanic={'chance'} backgroundColor={'#dd3d27'}/>} />\n      <Route path='/mechanics/challenge' render={(props) => <MechanicsGrid {...props} mechanic={'challenge'} backgroundColor={'#dd3d27'}/>} />\n      <Route path='/mechanics/multiplayer' render={(props) => <MechanicsGrid {...props} mechanic={'multiplayer'} backgroundColor={'#dd3d27'}/>} />\n      <Route path='/mechanics/action' render={(props) => <MechanicsGrid {...props} mechanic={'action'} backgroundColor={'#dd3d27'}/>} />\n      <Route path='/mechanics/strategy' render={(props) => <MechanicsGrid {...props} mechanic={'strategy'} backgroundColor={'#dd3d27'}/>} />\n      <Route path='/mechanics/training' render={(props) => <MechanicsGrid {...props} mechanic={'training'} backgroundColor={'#dd3d27'}/>} />\n\n      <Route path='/seminar' component={Seminar}/>\n      <Route path='/examples' component={Examples}/>\n      <Route exact path='/tools' component={ToolsDemo}/>\n      <Route path='/tools/playtest' component={Playtest}/>\n      <Route path='/tools/tetrad' component={Tetrad}/>\n\n      <Route exact path='/tools/challenges' render={(props) => <MechanicsGrid {...props} dChallenges={true} backgroundColor={'#30AEA4'}/>}/>\n      <Route path='/tools/challenges/time' render={(props) => <MechanicsGrid {...props} dChallenges={true} mechanic={'time'} backgroundColor={'#30AEA4'}/>}/>\n      <Route path='/tools/challenges/space' render={(props) => <MechanicsGrid {...props} dChallenges={true} mechanic={'space'} backgroundColor={'#30AEA4'}/>}/>\n      <Route path='/tools/challenges/chance' render={(props) => <MechanicsGrid {...props} dChallenges={true} mechanic={'chance'} backgroundColor={'#30AEA4'}/>}/>\n      <Route path='/tools/challenges/action' render={(props) => <MechanicsGrid {...props} dChallenges={true} mechanic={'action'} backgroundColor={'#30AEA4'}/>}/>\n      <Route path='/tools/challenges/challenge' render={(props) => <MechanicsGrid {...props} dChallenges={true} mechanic={'challenge'} backgroundColor={'#30AEA4'}/>}/>\n      <Route path='/tools/challenges/strategy' render={(props) => <MechanicsGrid {...props} dChallenges={true} mechanic={'strategy'} backgroundColor={'#30AEA4'}/>}/>\n      <Route path='/tools/challenges/multiplayer' render={(props) => <MechanicsGrid {...props} dChallenges={true} mechanic={'multiplayer'} backgroundColor={'#30AEA4'}/>}/>\n      <Route path='/tools/challenges/training' render={(props) => <MechanicsGrid {...props} dChallenges={true} mechanic={'training'} backgroundColor={'#30AEA4'}/>}/>\n\n    </Switch>\n\n)\n\nexport default NavSwitch;\n"]},"metadata":{},"sourceType":"module"}