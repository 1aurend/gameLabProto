{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _piece = require('./piece.js');\n\nvar _piece2 = _interopRequireDefault(_piece);\n\nvar _board = require('./board.js');\n\nvar _board2 = _interopRequireDefault(_board);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar game = {\n  lastInterval: 0,\n  timeBetweenUpdates: 1000,\n  timeSinceLastUpdate: 0,\n  piece: new _piece2.default(),\n  board: new _board2.default(),\n  gameOver: false,\n  paused: true,\n  controlKeys: {\n    37: 'left',\n    38: 'up',\n    39: 'right',\n    40: 'down'\n  },\n  context: null\n};\n\nfunction draw() {\n  game.board.draw(game.context);\n  game.piece.draw(game.context);\n}\n\nfunction update() {\n  game.piece.update(game.board);\n}\n\nfunction loop() {\n  var time = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var deltaTime = time - game.lastInterval;\n  game.lastInterval = time;\n  game.timeSinceLastUpdate += deltaTime;\n\n  if (game.timeSinceLastUpdate > game.timeBetweenUpdates) {\n    update();\n    game.timeSinceLastUpdate = 0;\n  }\n\n  draw();\n  requestAnimationFrame(loop);\n}\n\nfunction handleKeyDown(e) {\n  var dir = game.controlKeys[e.keyCode];\n\n  if (dir) {\n    e.preventDefault();\n    game.piece.move(dir, game.board);\n\n    if (dir === 'down') {\n      game.timeSinceLastUpdate = 0;\n    } else if (dir === 'up') {\n      game.piece.rotateRight(game.board);\n    }\n  }\n}\n\nvar NilssongamesTetris = function (_Component) {\n  _inherits(NilssongamesTetris, _Component);\n\n  function NilssongamesTetris() {\n    _classCallCheck(this, NilssongamesTetris);\n\n    return _possibleConstructorReturn(this, (NilssongamesTetris.__proto__ || Object.getPrototypeOf(NilssongamesTetris)).apply(this, arguments));\n  }\n\n  _createClass(NilssongamesTetris, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      game.context = this.canvas.getContext('2d'); // Don't attatch eventlisteners directly to the DOM element because we can't rely on the element being focused\n\n      window.addEventListener('keydown', handleKeyDown);\n      loop();\n    }\n  }, {\n    key: 'componentWillUnMount',\n    value: function componentWillUnMount() {\n      window.removeEventListener('keydown', handleKeyDown);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      return _react2.default.createElement('canvas', {\n        width: game.board.width,\n        height: game.board.height,\n        ref: function ref(el) {\n          return _this2.canvas = el;\n        }\n      });\n    }\n  }]);\n\n  return NilssongamesTetris;\n}(_react.Component);\n\nexports.default = NilssongamesTetris;","map":null,"metadata":{},"sourceType":"script"}