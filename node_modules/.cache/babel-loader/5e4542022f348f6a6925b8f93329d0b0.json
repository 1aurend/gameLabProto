{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nexports.animatePlayer = animatePlayer;\n\nvar _constants = require('../constants');\n\nvar _movement = require('./movement');\n\nfunction getEatenFood(food, player, newPosition) {\n  var _orderPolarity = (0, _movement.orderPolarity)(player.direction),\n      plane = _orderPolarity.plane,\n      polarity = _orderPolarity.polarity;\n\n  return food.findIndex(function (_ref) {\n    var position = _ref.position,\n        eaten = _ref.eaten;\n    return !eaten && position[1 - plane] === player.position[1 - plane] && polarity * position[plane] >= polarity * player.position[plane] && polarity * position[plane] <= polarity * newPosition[plane];\n  });\n}\n\nfunction getNewPlayerVector(player, time) {\n  try {\n    var _getNewPosition = (0, _movement.getNewPosition)(player.position, player.direction, _constants.PLAYER_SPEED, time),\n        newPosition = _getNewPosition.newPosition,\n        movedDistance = _getNewPosition.movedDistance;\n\n    if (player.nextDirection !== player.direction) {\n      var changedVector = (0, _movement.getChangedVector)(player.position, newPosition, player.direction, player.nextDirection, movedDistance);\n\n      if (changedVector) {\n        return {\n          position: changedVector,\n          direction: player.nextDirection\n        };\n      }\n    }\n\n    return {\n      position: newPosition\n    };\n  } catch (err) {\n    // wrapped\n    return {};\n  }\n}\n\nfunction eatMonsters(state) {\n  return _extends({}, state, {\n    monsters: state.monsters.map(function (monster) {\n      return _extends({}, monster, {\n        eatingTime: _constants.EATING_TIME_SECONDS\n      });\n    })\n  });\n}\n\nfunction animatePlayer(state, time) {\n  var newVector = getNewPlayerVector(state.player, time);\n  var eatenFoodIndex = getEatenFood(state.food, state.player, newVector.position);\n  var food = state.food.slice();\n  var scoreDelta = 0;\n\n  if (eatenFoodIndex > -1) {\n    food[eatenFoodIndex].eaten = true;\n    scoreDelta = 1 + (food[eatenFoodIndex].big >> 0);\n  }\n\n  var eating = eatenFoodIndex > -1 && food[eatenFoodIndex].big;\n\n  var nextState = _extends({}, state, {\n    score: state.score + scoreDelta,\n    player: _extends({}, state.player, newVector),\n    food: food\n  });\n\n  if (eating) {\n    return eatMonsters(nextState);\n  }\n\n  return nextState;\n}","map":null,"metadata":{},"sourceType":"script"}