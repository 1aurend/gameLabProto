{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nexports.default = getInitialState;\n\nvar _constants = require('./constants');\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nfunction isBigFood(_ref) {\n  var _ref2 = _slicedToArray(_ref, 2),\n      posX = _ref2[0],\n      posY = _ref2[1];\n\n  return (posX === 0 || posX === 25) && (posY === 6 || posY === 26);\n}\n\nfunction generateFood() {\n  var genRow = function genRow(startX, posY, num) {\n    return new Array(num).fill(0).map(function (item, index) {\n      return [startX + index, posY];\n    });\n  };\n\n  var genDisparateRow = function genDisparateRow(xPoints, posY) {\n    return xPoints.map(function (posX) {\n      return [posX, posY];\n    });\n  };\n\n  var genContinuousRow = function genContinuousRow(ranges, posY) {\n    return ranges.reduce(function (items, _ref3) {\n      var _ref4 = _slicedToArray(_ref3, 2),\n          startX = _ref4[0],\n          num = _ref4[1];\n\n      return [].concat(_toConsumableArray(items), _toConsumableArray(genRow(startX, posY, num)));\n    }, []);\n  };\n\n  var genCol = function genCol(posX, startY, num) {\n    return new Array(num).fill(0).map(function (item, index) {\n      return [posX, startY + index];\n    });\n  };\n\n  return [].concat(_toConsumableArray(genRow(0, 0, 26)), _toConsumableArray(genDisparateRow([0, 11, 14, 25], 1)), _toConsumableArray(genDisparateRow([0, 11, 14, 25], 2)), _toConsumableArray(genContinuousRow([[0, 6], [8, 4], [14, 4], [20, 6]], 3)), _toConsumableArray(genDisparateRow([2, 5, 8, 17, 20, 23], 4)), _toConsumableArray(genDisparateRow([2, 5, 8, 17, 20, 23], 5)), _toConsumableArray(genContinuousRow([[0, 3], [5, 7], [14, 7], [23, 3]], 6)), _toConsumableArray(genDisparateRow([0, 5, 11, 14, 20, 25], 7)), _toConsumableArray(genDisparateRow([0, 5, 11, 14, 20, 25], 8)), _toConsumableArray(genContinuousRow([[0, 12], [14, 12]], 9)), _toConsumableArray(genCol(5, 10, 11)), _toConsumableArray(genCol(20, 10, 11)), _toConsumableArray(genContinuousRow([[0, 6], [8, 4], [14, 4], [20, 6]], 21)), _toConsumableArray(genDisparateRow([0, 5, 8, 17, 20, 25], 22)), _toConsumableArray(genDisparateRow([0, 5, 8, 17, 20, 25], 23)), _toConsumableArray(genRow(0, 24, 26)), _toConsumableArray(genDisparateRow([0, 5, 11, 14, 20, 25], 25)), _toConsumableArray(genDisparateRow([0, 5, 11, 14, 20, 25], 26)), _toConsumableArray(genDisparateRow([0, 5, 11, 14, 20, 25], 27)), _toConsumableArray(genContinuousRow([[0, 12], [14, 12]], 28))).map(function (position, index) {\n    return {\n      key: index,\n      position: position,\n      eaten: false,\n      big: isBigFood(position)\n    };\n  });\n}\n\nfunction getInitialState() {\n  return {\n    stepTime: Date.now(),\n    score: 0,\n    player: {\n      position: [12.5, 6],\n      direction: _constants.EAST,\n      nextDirection: _constants.EAST,\n      lives: 3\n    },\n    lost: false,\n    monsters: [{\n      id: 'monster-red',\n      direction: _constants.NORTH,\n      startingDirection: _constants.NORTH,\n      position: [12.5, 15],\n      startingPosition: [12.5, 15],\n      deadTime: 0,\n      eatingTime: 0,\n      color: 'red'\n    }, {\n      id: 'monster-cyan',\n      direction: _constants.EAST,\n      startingDirection: _constants.EAST,\n      position: [10.5, 15],\n      startingPosition: [10.5, 15],\n      deadTime: 0,\n      eatingTime: 0,\n      color: 'cyan',\n      directionBias: true\n    }, {\n      id: 'monster-orange',\n      direction: _constants.WEST,\n      startingDirection: _constants.WEST,\n      position: [14.5, 15],\n      startingPosition: [14.5, 15],\n      deadTime: 0,\n      eatingTime: 0,\n      color: 'darkorange'\n    }, {\n      id: 'monster-pink',\n      direction: _constants.NORTH,\n      startingDirection: _constants.NORTH,\n      position: [12.5, 17],\n      startingPosition: [12.5, 17],\n      deadTime: 0,\n      eatingTime: 0,\n      color: 'pink',\n      directionBias: true\n    }],\n    food: generateFood()\n  };\n}","map":null,"metadata":{},"sourceType":"script"}