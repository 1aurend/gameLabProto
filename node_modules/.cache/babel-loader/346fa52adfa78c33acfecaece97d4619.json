{"ast":null,"code":"var _jsxFileName = \"/Users/phil/Development/gameLabProto/src/components/mechanics/CenterPane.js\";\nimport React, { Component } from 'react';\nimport '../mechanics_grid.css';\nimport mechanicsList from './mechanicslist_clean.js';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport Collapsible from 'react-collapsible';\n\nfunction findMechanic(name) {\n  for (var i = 0; i < mechanicsList.length; i++) {\n    if (name === mechanicsList[i].name) {\n      return mechanicsList[i];\n    }\n  }\n\n  return {\n    name: 'coming soon!',\n    pitch: \"Mechanics are the interactions and relationships that make a game a system. Mechanics are what make a game interactive rather than entertainment you just take in. Put simply, mechanics are what make a game work. For this reason, designing with mechanics in mind is the key way teachers can apply the logic of game design to the classroom.\"\n  };\n}\n\nfunction findMove(mech, move) {\n  for (var i = 0; i < mechanicsList.length; i++) {\n    if (mech === mechanicsList[i].name) {\n      for (var j = 0; j < mechanicsList[i].moves.length; j++) {\n        if (move === mechanicsList[i].moves[j].name) {\n          return mechanicsList[i].moves[j];\n        }\n      }\n    }\n  }\n\n  return {\n    name: 'coming soon!',\n    what: '',\n    effects: '',\n    examples: ''\n  };\n}\n\nfunction CenterPane(props) {\n  var mechUp = findMechanic(props.mechanic);\n  var moveUp = props.move ? findMove(props.mechanic, props.move) : false;\n  var movesLinks = mechUp.moves ? mechUp.moves.map(function (move) {\n    return React.createElement(\"h5\", {\n      className: \"movesLinksText\",\n      onClick: props.onClick(move.name),\n      key: move.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \" \\xA0\\xA0\\xA0\\xA0\", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, move.name));\n  }) : 'coming soon!';\n  var effects = moveUp.effects ? moveUp.effects.map(function (effect) {\n    return React.createElement(Collapsible, {\n      trigger: effect.what,\n      className: \"Collapsible__trigger\",\n      key: effect.what,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, effect.how.map(function (how) {\n      return React.createElement(\"li\", {\n        key: how,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, how);\n    })));\n  }) : 'coming soon!';\n  var examples = moveUp.examples ? moveUp.examples.map(function (example) {\n    return React.createElement(\"li\", {\n      key: example,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, example);\n  }) : 'coming soon!';\n\n  if (props.mechanic === 'mechanics') {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      id: \"activeMech\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, mechUp.name), React.createElement(\"div\", {\n      id: \"centertext\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, mechUp.pitch), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, mechUp.structure), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, mechUp.go)));\n  } else if (!props.move && props.mechanic !== 'mechanics') {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      id: \"movesLinks\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, movesLinks), React.createElement(\"div\", {\n      id: \"activeMech\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, mechUp.name), React.createElement(\"div\", {\n      id: \"centertext\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"The Pitch\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, mechUp.pitch), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"What is it?\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, mechUp.what)));\n  } else if (props.move) {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      id: \"movesLinks\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, movesLinks), React.createElement(\"div\", {\n      id: \"activeMech\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, props.mechanic), React.createElement(\"div\", {\n      id: \"centertext\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"What is it?\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, moveUp.what), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"What can it do and how?\"), effects, React.createElement(\"h5\", {\n      style: {\n        paddingTop: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Examples\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, examples)));\n  }\n}\n\nexport default withRouter(CenterPane);","map":{"version":3,"sources":["/Users/phil/Development/gameLabProto/src/components/mechanics/CenterPane.js"],"names":["React","Component","mechanicsList","Link","withRouter","Collapsible","findMechanic","name","i","length","pitch","findMove","mech","move","j","moves","what","effects","examples","CenterPane","props","mechUp","mechanic","moveUp","movesLinks","map","onClick","effect","how","example","structure","go","paddingTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport '../mechanics_grid.css'\nimport mechanicsList from './mechanicslist_clean.js'\nimport { Link } from 'react-router-dom'\nimport { withRouter } from 'react-router-dom'\nimport Collapsible from 'react-collapsible'\n\n\nfunction findMechanic (name) {\n  for (var i = 0; i < mechanicsList.length; i++) {\n    if (name === mechanicsList[i].name) {\n      return mechanicsList[i];\n    }\n  }\n  return ({\n    name: 'coming soon!',\n    pitch: \"Mechanics are the interactions and relationships that make a game a system. Mechanics are what make a game interactive rather than entertainment you just take in. Put simply, mechanics are what make a game work. For this reason, designing with mechanics in mind is the key way teachers can apply the logic of game design to the classroom.\",\n  })\n}\n\nfunction findMove (mech, move) {\n  for (var i = 0; i < mechanicsList.length; i++) {\n    if (mech === mechanicsList[i].name) {\n      for (var j = 0; j < mechanicsList[i].moves.length; j++) {\n        if (move === mechanicsList[i].moves[j].name) {\n          return mechanicsList[i].moves[j];\n        }\n      }\n    }\n  }\n  return ({\n    name: 'coming soon!',\n    what: '',\n    effects: '',\n    examples: '',\n  })\n}\n\n\nfunction CenterPane (props) {\n\n  let mechUp = findMechanic(props.mechanic)\n  let moveUp = props.move ? findMove(props.mechanic, props.move) : false\n\n  const movesLinks = mechUp.moves ? mechUp.moves.map((move) => <h5 className='movesLinksText' onClick={props.onClick(move.name)} key={move.name}> &nbsp;&nbsp;&nbsp;&nbsp;<span>{move.name}</span></h5> ) : 'coming soon!'\n\n  const effects = moveUp.effects ? moveUp.effects.map((effect) =>\n    <Collapsible trigger={effect.what} className='Collapsible__trigger' key={effect.what}>\n      <ul>\n      {effect.how.map((how) => <li key={how}>{how}</li>)}\n      </ul>\n    </Collapsible>)\n     : 'coming soon!'\n\n  const examples = moveUp.examples ? moveUp.examples.map((example) => <li key={example}>{example}</li>) : 'coming soon!'\n\n\n  if (props.mechanic === 'mechanics') {\n    return (\n    <>\n      {/*<div id='movesLinks'>\n        {movesLinks}\n      </div>*/}\n      <div id='activeMech'>\n        {mechUp.name}\n      </div>\n      <div id=\"centertext\">\n        <p>{mechUp.pitch}</p>\n        <p>{mechUp.structure}</p>\n        <p>{mechUp.go}</p>\n      </div>\n    </>\n    )\n  }\n\n  else if (!props.move && props.mechanic !== 'mechanics') {\n\n    return (\n    <>\n      <div id='movesLinks'>\n        {movesLinks}\n      </div>\n      <div id='activeMech'>\n        {mechUp.name}\n      </div>\n      <div id=\"centertext\">\n        <h5>The Pitch</h5>\n        <p>{mechUp.pitch}</p>\n        <h5>What is it?</h5>\n        <p>{mechUp.what}</p>\n      </div>\n    </>\n    )\n  }\n\n  else if (props.move) {\n\n    return (\n    <>\n      <div id='movesLinks'>\n        {movesLinks}\n      </div>\n      <div id='activeMech'>\n        {props.mechanic}\n      </div>\n      <div id=\"centertext\">\n        <h5>What is it?</h5>\n        <p>{moveUp.what}</p>\n        <h5>What can it do and how?</h5>\n          {effects}\n        <h5 style={{paddingTop: '10px'}}>Examples</h5>\n        <ul>\n          {examples}\n        </ul>\n      </div>\n    </>\n    )\n  }\n}\n\n\n\nexport default withRouter(CenterPane);\n"]},"metadata":{},"sourceType":"module"}