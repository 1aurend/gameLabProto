{"ast":null,"code":"import _classCallCheck from \"/Users/phil/Development/gameLabProto/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/phil/Development/gameLabProto/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/phil/Development/gameLabProto/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/phil/Development/gameLabProto/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/phil/Development/gameLabProto/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/phil/Development/gameLabProto/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/phil/Development/gameLabProto/src/components/mechanics/MechanicsGrid.js\";\nimport React, { Component } from 'react';\nimport { Switch, Link, Route } from 'react-router-dom';\nimport '../grids.css';\nimport '../mechanics_grid.css';\nimport DiceNav from '../dice_nav/DiceNav.js';\nimport gameLab from \"../../assets/dev_subtitle.svg\";\nimport CenterPane from './CenterPane.js';\nimport ChallengePane from '../subpages/ChallengePane.js';\n\nvar MechanicsGrid =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MechanicsGrid, _Component);\n\n  function MechanicsGrid(props) {\n    var _this;\n\n    _classCallCheck(this, MechanicsGrid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MechanicsGrid).call(this, props));\n\n    _this.onClickMove = function (move) {\n      return function (e) {\n        _this.setState({\n          activeMove: move\n        });\n      };\n    };\n\n    _this.state = {\n      activeMech: props.mechanic,\n      activeMove: false\n    };\n    _this.onClickMech = _this.onClickMech.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onClickMove = _this.onClickMove.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(MechanicsGrid, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.props.location !== prevProps.location) {\n        {\n          /*this.setState({ activeMech: this.props.location.pathname === '/mechanics' || this.props.location.pathname === '/mechanics/' ? 'mechanics' : this.props.location.pathname.split('/')[this.props.location.pathname.split('/').length-1]});*/\n        }\n        this.setState({\n          activeMech: this.props.mechanic\n        });\n      }\n    }\n  }, {\n    key: \"onClickMech\",\n    value: function onClickMech(mech) {\n      this.setState({\n        activeMech: mech,\n        activeMove: false\n      });\n      {\n        /*^^unnecessary? now always being updated via Route?*/\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var center;\n      var background = this.props.backgroundColor;\n      var title;\n      var linkPath;\n\n      if (this.props.dChallenges) {\n        center = React.createElement(ChallengePane, {\n          mechanic: this.state.activeMech,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        });\n        title = 'design challenges';\n        linkPath = '/tools/challenges/';\n      } else {\n        center = React.createElement(CenterPane, {\n          mechanic: this.state.activeMech,\n          move: this.state.activeMove,\n          onClick: function onClick(e) {\n            return _this2.onClickMove(e);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        });\n        title = 'the mechanics';\n        linkPath = '/mechanics/';\n      }\n\n      var fontColor = ['', '', '', '', '', '', '', ''];\n      fontColor.fill('#fcf5eb', 0, 8);\n      var theMechanics = ['time', 'space', 'chance', 'action', 'challenge', 'training', 'strategy', 'multiplayer'];\n\n      for (var i = 0; i < theMechanics.length; i++) {\n        if (this.state.activeMech === theMechanics[i] && !this.props.dChallenges) {\n          fontColor[i] = '#7fc8a0';\n        } else if (this.state.activeMech === theMechanics[i] && this.props.dChallenges) {\n          fontColor[i] = '#e2af3b';\n        }\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          backgroundColor: background\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"biggrid\",\n        style: {\n          backgroundColor: background\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"mechanicstitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: gameLab,\n        alt: \"gameLab\",\n        className: \"gameLab\",\n        style: {\n          maxHeight: '50%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"pageTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        style: {\n          color: background\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, title))), React.createElement(\"div\", {\n        id: \"diceNav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(DiceNav, {\n        path: this.props.location.pathname,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"centerPane\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, center), React.createElement(\"div\", {\n        id: \"mechanic1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Link, {\n        className: \"mechLink\",\n        to: linkPath + 'time',\n        onClick: function onClick(e) {\n          return _this2.onClickMech('time', e);\n        },\n        style: {\n          color: fontColor[0]\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Time\")), React.createElement(\"div\", {\n        id: \"mechanic2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(Link, {\n        className: \"mechLink\",\n        to: linkPath + 'space',\n        onClick: function onClick(e) {\n          return _this2.onClickMech('space', e);\n        },\n        style: {\n          color: fontColor[1]\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Space\")), React.createElement(\"div\", {\n        id: \"mechanic3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Link, {\n        className: \"mechLink\",\n        to: linkPath + 'chance',\n        onClick: function onClick(e) {\n          return _this2.onClickMech('chance', e);\n        },\n        style: {\n          color: fontColor[2]\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Chance\")), React.createElement(\"div\", {\n        id: \"mechanic4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Link, {\n        className: \"mechLink\",\n        to: linkPath + 'action',\n        onClick: function onClick(e) {\n          return _this2.onClickMech('action', e);\n        },\n        style: {\n          color: fontColor[3]\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Action\")), React.createElement(\"div\", {\n        id: \"mechanic5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(Link, {\n        className: \"mechLink\",\n        to: linkPath + 'challenge',\n        onClick: function onClick(e) {\n          return _this2.onClickMech('challenge', e);\n        },\n        style: {\n          color: fontColor[4]\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Challenge\")), React.createElement(\"div\", {\n        id: \"mechanic6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(Link, {\n        className: \"mechLink\",\n        to: linkPath + 'training',\n        onClick: function onClick(e) {\n          return _this2.onClickMech('training', e);\n        },\n        style: {\n          color: fontColor[5]\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Training\")), React.createElement(\"div\", {\n        id: \"mechanic7\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(Link, {\n        className: \"mechLink\",\n        to: linkPath + 'strategy',\n        onClick: function onClick(e) {\n          return _this2.onClickMech('strategy', e);\n        },\n        style: {\n          color: fontColor[6]\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Strategy\")), React.createElement(\"div\", {\n        id: \"mechanic8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Link, {\n        className: \"mechLink\",\n        to: linkPath + 'multiplayer',\n        onClick: function onClick(e) {\n          return _this2.onClickMech('multiplayer', e);\n        },\n        style: {\n          color: fontColor[7]\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Multiplayer\"))));\n    }\n  }]);\n\n  return MechanicsGrid;\n}(Component);\n\nexport default MechanicsGrid;","map":{"version":3,"sources":["/Users/phil/Development/gameLabProto/src/components/mechanics/MechanicsGrid.js"],"names":["React","Component","Switch","Link","Route","DiceNav","CenterPane","ChallengePane","MechanicsGrid","props","onClickMove","move","e","setState","activeMove","state","activeMech","mechanic","onClickMech","bind","prevProps","prevState","location","mech","center","background","backgroundColor","title","linkPath","dChallenges","fontColor","fill","theMechanics","i","length","gameLab","maxHeight","color","pathname"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Switch, Link, Route } from 'react-router-dom';\nimport '../grids.css'\nimport '../mechanics_grid.css'\nimport DiceNav from '../dice_nav/DiceNav.js'\nimport gameLab from '../../assets/dev_subtitle.svg'\nimport CenterPane from './CenterPane.js'\nimport ChallengePane from '../subpages/ChallengePane.js'\n\nclass MechanicsGrid extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      activeMech: props.mechanic,\n      activeMove: false,\n    }\n    this.onClickMech = this.onClickMech.bind(this)\n    this.onClickMove = this.onClickMove.bind(this)\n\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n  if (this.props.location !== prevProps.location) {\n     {/*this.setState({ activeMech: this.props.location.pathname === '/mechanics' || this.props.location.pathname === '/mechanics/' ? 'mechanics' : this.props.location.pathname.split('/')[this.props.location.pathname.split('/').length-1]});*/}\n     this.setState({activeMech: this.props.mechanic})\n  }\n}\n\n  onClickMech(mech){\n    this.setState(\n      {\n        activeMech: mech,\n        activeMove: false,\n      }\n    );\n    {/*^^unnecessary? now always being updated via Route?*/}\n  }\n\n  onClickMove = (move) => (e) => {\n    this.setState(\n      {\n        activeMove: move,\n      }\n    )\n  }\n\n\n  render() {\n\n    let center\n    let background = this.props.backgroundColor\n    let title\n    let linkPath\n    if (this.props.dChallenges) {\n      center = <ChallengePane mechanic={this.state.activeMech} />\n      title = 'design challenges'\n      linkPath = '/tools/challenges/'\n    }\n    else {\n      center = <CenterPane mechanic={this.state.activeMech} move={this.state.activeMove} onClick={(e) => this.onClickMove(e)} />\n      title = 'the mechanics'\n      linkPath = '/mechanics/'\n    }\n\n    let fontColor = ['','','','','','','','']\n    fontColor.fill('#fcf5eb', 0, 8)\n    let theMechanics = ['time', 'space', 'chance', 'action', 'challenge', 'training', 'strategy', 'multiplayer']\n    for (var i = 0; i < theMechanics.length; i++) {\n        if (this.state.activeMech === theMechanics[i] && !this.props.dChallenges) {\n          fontColor[i] = '#7fc8a0'\n        }\n        else if (this.state.activeMech === theMechanics[i] && this.props.dChallenges) {\n          fontColor[i] = '#e2af3b'\n        }\n    }\n\n  return (\n    <div>\n      <div style={{backgroundColor: background}}>\n      </div>\n      <div className=\"biggrid\" style={{backgroundColor: background}}>\n        <div id='mechanicstitle'>\n          <img src={gameLab} alt='gameLab' className='gameLab' style={{maxHeight: '50%'}}/>\n          <div className='pageTitle'><h1 style={{color: background}}>{title}</h1></div>\n        </div>\n        <div id='diceNav'>\n          <DiceNav path={this.props.location.pathname}/>\n        </div>\n        <div id='centerPane'>\n          {center}\n        </div>\n        <div id='mechanic1'>\n          <Link className=\"mechLink\" to={linkPath + 'time'} onClick={(e) => this.onClickMech('time', e)} style={{color: fontColor[0]}}>Time</Link>\n        </div>\n        <div id=\"mechanic2\">\n          <Link className=\"mechLink\" to={linkPath + 'space'} onClick={(e) => this.onClickMech('space', e)} style={{color: fontColor[1]}}>Space</Link>\n        </div>\n        <div id='mechanic3'>\n          <Link className=\"mechLink\" to={linkPath + 'chance'} onClick={(e) => this.onClickMech('chance', e)} style={{color: fontColor[2]}}>Chance</Link>\n        </div>\n        <div id=\"mechanic4\">\n          <Link className=\"mechLink\" to={linkPath + 'action'} onClick={(e) => this.onClickMech('action', e)} style={{color: fontColor[3]}}>Action</Link>\n        </div>\n        <div id=\"mechanic5\">\n          <Link className=\"mechLink\" to={linkPath + 'challenge'} onClick={(e) => this.onClickMech('challenge', e)} style={{color: fontColor[4]}}>Challenge</Link>\n        </div>\n        <div id=\"mechanic6\">\n          <Link className=\"mechLink\" to={linkPath + 'training'} onClick={(e) => this.onClickMech('training', e)} style={{color: fontColor[5]}}>Training</Link>\n        </div>\n        <div id=\"mechanic7\">\n          <Link className=\"mechLink\" to={linkPath + 'strategy'} onClick={(e) => this.onClickMech('strategy', e)} style={{color: fontColor[6]}}>Strategy</Link>\n        </div>\n        <div id=\"mechanic8\">\n          <Link className=\"mechLink\" to={linkPath + 'multiplayer'}onClick={(e) => this.onClickMech('multiplayer', e)} style={{color: fontColor[7]}}>Multiplayer</Link>\n        </div>\n      </div>\n</div>\n  );\n}\n}\n\nexport default (MechanicsGrid);\n"]},"metadata":{},"sourceType":"module"}