{"ast":null,"code":"import _classCallCheck from \"/Users/phil/Development/gameLabProto/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/phil/Development/gameLabProto/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/phil/Development/gameLabProto/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/phil/Development/gameLabProto/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/phil/Development/gameLabProto/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/phil/Development/gameLabProto/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/phil/Development/gameLabProto/src/components/mechanics/MechanicsGrid.js\";\nimport React, { Component } from 'react';\nimport { Switch, Link, Route } from 'react-router-dom';\nimport '../grids.css';\nimport '../mechanics_grid.css';\nimport '../backgrounds.css';\nimport DiceNav from '../dice_nav/DiceNav.js';\nimport gameLab from \"../../assets/dev_subtitle.svg\";\nimport CenterPane from './CenterPane.js';\nimport ChallengePane from '../subpages/ChallengePane.js';\nimport timesvg from \"../../assets/time.svg\";\nimport spacesvg from \"../../assets/space.svg\";\nimport actionsvg from \"../../assets/action.svg\";\nimport chancesvg from \"../../assets/chance.svg\";\nimport challengesvg from \"../../assets/challenge.svg\";\nimport strategysvg from \"../../assets/strategy.svg\";\nimport multiplayersvg from \"../../assets/multiplayer.svg\";\nimport trainingsvg from \"../../assets/training.svg\";\nimport greenTime from \"../../assets/time_green.svg\";\nimport goldTime from \"../../assets/time_gold.svg\";\nimport greenSpace from \"../../assets/space_green.svg\";\nimport goldSpace from \"../../assets/space_gold.svg\";\nimport greenChance from \"../../assets/chance_green.svg\";\nimport goldChance from \"../../assets/chance_gold.svg\";\nimport greenChallenge from \"../../assets/challenge_green.svg\";\nimport goldChallenge from \"../../assets/challenge_gold.svg\";\nimport greenAction from \"../../assets/action_green.svg\";\nimport goldAction from \"../../assets/action_gold.svg\";\nimport greenStrategy from \"../../assets/strategy_green.svg\";\nimport goldStrategy from \"../../assets/strategy_gold.svg\";\nimport greenTraining from \"../../assets/training_green.svg\";\nimport goldTraining from \"../../assets/training_gold.svg\";\nimport greenMultiplayer from \"../../assets/multiplayer_green.svg\";\nimport goldMultiplayer from \"../../assets/multiplayer_gold.svg\";\n\nvar MechanicsGrid =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MechanicsGrid, _Component);\n\n  function MechanicsGrid(props) {\n    var _this;\n\n    _classCallCheck(this, MechanicsGrid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MechanicsGrid).call(this, props));\n\n    _this.onClick = function (move) {\n      return function (e) {\n        _this.setState({\n          activeMove: move\n        });\n      };\n    };\n\n    _this.state = {\n      activeMech: props.mechanic,\n      activeMove: false\n    };\n    _this.onClick = _this.onClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    console.log('constructor log = ' + props.mechanic);\n    return _this;\n  }\n\n  _createClass(MechanicsGrid, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.props.location !== prevProps.location || this.props.dChallenges !== prevProps.dChallenges || this.props.mechanic !== prevProps.mechanic) {\n        this.setState({\n          activeMech: this.props.mechanic,\n          activeMove: false\n        });\n        console.log('update log = ' + this.props.mechanic);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log('render state mech: ' + this.state.activeMech);\n      console.log('render prop mech: ' + this.props.mechanic);\n      console.log('here is dChallenges: ' + this.props.dChallenges);\n      var center;\n      var background = this.props.backgroundColor;\n      var title;\n      var linkPath;\n\n      if (this.props.dChallenges) {\n        center = React.createElement(ChallengePane, {\n          mechanic: this.state.activeMech,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        });\n        title = 'design challenges';\n        linkPath = '/tools/challenges/';\n      } else {\n        center = React.createElement(CenterPane, {\n          mechanic: this.state.activeMech,\n          move: this.state.activeMove,\n          onClick: function onClick(e) {\n            return _this2.onClick(e);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        });\n        title = 'the mechanics';\n        linkPath = '/mechanics/';\n      }\n\n      var gridColors = {\n        time: {\n          font: '#fcf5eb',\n          svg: timesvg,\n          green: greenTime,\n          gold: goldTime\n        },\n        space: {\n          font: '#fcf5eb',\n          svg: spacesvg,\n          green: greenSpace,\n          gold: goldSpace\n        },\n        chance: {\n          font: '#fcf5eb',\n          svg: chancesvg,\n          green: greenChance,\n          gold: goldChance\n        },\n        action: {\n          font: '#fcf5eb',\n          svg: actionsvg,\n          green: greenAction,\n          gold: goldAction\n        },\n        challenge: {\n          font: '#fcf5eb',\n          svg: challengesvg,\n          green: greenChallenge,\n          gold: goldChallenge\n        },\n        training: {\n          font: '#fcf5eb',\n          svg: trainingsvg,\n          green: greenTraining,\n          gold: goldTraining\n        },\n        strategy: {\n          font: '#fcf5eb',\n          svg: strategysvg,\n          green: greenStrategy,\n          gold: goldStrategy\n        },\n        multiplayer: {\n          font: '#fcf5eb',\n          svg: multiplayersvg,\n          green: greenMultiplayer,\n          gold: goldMultiplayer\n        }\n      };\n\n      for (var i = 0; i < Object.keys(gridColors).length; i++) {\n        if (this.state.activeMech === Object.keys(gridColors)[i] && !this.props.dChallenges) {\n          var key = Object.keys(gridColors)[i];\n          gridColors[key]['font'] = '#7fc8a0';\n          gridColors[key]['svg'] = gridColors[key]['green'];\n        } else if (this.state.activeMech === Object.keys(gridColors)[i] && this.props.dChallenges) {\n          var _key = Object.keys(gridColors)[i];\n          gridColors[_key]['font'] = '#e2af3b';\n          gridColors[_key]['svg'] = gridColors[_key]['gold'];\n        }\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"biggrid\",\n        style: {\n          backgroundColor: background\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"mechanicstitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"titleimg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"pageTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: linkPath,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        style: {\n          color: background\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, title))), React.createElement(\"div\", {\n        id: \"diceNav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(DiceNav, {\n        path: this.props.location.pathname,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        id: \"centerPane\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, center), React.createElement(\"div\", {\n        id: \"dotsleftstrip\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"dotsrightstrip\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"grid9mech\",\n        id: \"mechanic1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: linkPath + 'time',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: gridColors.time.svg,\n        alt: \"hourglass\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      })), React.createElement(Link, {\n        className: \"mechLink\",\n        to: linkPath + 'time',\n        style: {\n          color: gridColors.time.font\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"Time\")), React.createElement(\"div\", {\n        className: \"grid9mech\",\n        id: \"mechanic2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: linkPath + 'space',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: gridColors.space.svg,\n        alt: \"checkerboard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      })), React.createElement(Link, {\n        className: \"mechLink\",\n        to: linkPath + 'space',\n        style: {\n          color: gridColors.space.font\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"Space\")), React.createElement(\"div\", {\n        className: \"grid9mech\",\n        id: \"mechanic3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: linkPath + 'chance',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: gridColors.chance.svg,\n        alt: \"hand of cards\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      })), React.createElement(Link, {\n        className: \"mechLink\",\n        to: linkPath + 'chance',\n        style: {\n          color: gridColors.chance.font\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, \"Chance\")), React.createElement(\"div\", {\n        className: \"grid9mech\",\n        id: \"mechanic4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: linkPath + 'action',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: gridColors.action.svg,\n        alt: \"dominos\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      })), React.createElement(Link, {\n        className: \"mechLink\",\n        to: linkPath + 'action',\n        style: {\n          color: gridColors.action.font\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"Action\")), React.createElement(\"div\", {\n        className: \"grid9mech\",\n        id: \"mechanic5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: linkPath + 'challenge',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: gridColors.challenge.svg,\n        alt: \"mountain\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      })), React.createElement(Link, {\n        className: \"mechLink\",\n        to: linkPath + 'challenge',\n        style: {\n          color: gridColors.challenge.font\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"Challenge\")), React.createElement(\"div\", {\n        className: \"grid9mech\",\n        id: \"mechanic6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: linkPath + 'training',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: gridColors.training.svg,\n        alt: \"checkerboard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      })), React.createElement(Link, {\n        className: \"mechLink\",\n        to: linkPath + 'training',\n        style: {\n          color: gridColors.training.font\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \"Training\")), React.createElement(\"div\", {\n        className: \"grid9mech\",\n        id: \"mechanic8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: linkPath + 'strategy',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: gridColors.strategy.svg,\n        alt: \"chess knight\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      })), React.createElement(Link, {\n        className: \"mechLink\",\n        to: linkPath + 'strategy',\n        style: {\n          color: gridColors.strategy.font\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, \"Strategy\")), React.createElement(\"div\", {\n        className: \"grid9mech\",\n        id: \"mechanic7\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: linkPath + 'multiplayer',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: gridColors.multiplayer.svg,\n        alt: \"controllers\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      })), React.createElement(Link, {\n        className: \"mechLink\",\n        to: linkPath + 'multiplayer',\n        style: {\n          color: gridColors.multiplayer.font\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \"Multiplayer\"))));\n    }\n  }]);\n\n  return MechanicsGrid;\n}(Component);\n\nexport default MechanicsGrid;","map":{"version":3,"sources":["/Users/phil/Development/gameLabProto/src/components/mechanics/MechanicsGrid.js"],"names":["React","Component","Switch","Link","Route","DiceNav","CenterPane","ChallengePane","MechanicsGrid","props","onClick","move","e","setState","activeMove","state","activeMech","mechanic","bind","console","log","prevProps","prevState","location","dChallenges","center","background","backgroundColor","title","linkPath","gridColors","time","font","svg","timesvg","green","greenTime","gold","goldTime","space","spacesvg","greenSpace","goldSpace","chance","chancesvg","greenChance","goldChance","action","actionsvg","greenAction","goldAction","challenge","challengesvg","greenChallenge","goldChallenge","training","trainingsvg","greenTraining","goldTraining","strategy","strategysvg","greenStrategy","goldStrategy","multiplayer","multiplayersvg","greenMultiplayer","goldMultiplayer","i","Object","keys","length","key","color","pathname"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Switch, Link, Route } from 'react-router-dom';\nimport '../grids.css'\nimport '../mechanics_grid.css'\nimport '../backgrounds.css'\nimport DiceNav from '../dice_nav/DiceNav.js'\nimport gameLab from '../../assets/dev_subtitle.svg'\nimport CenterPane from './CenterPane.js'\nimport ChallengePane from '../subpages/ChallengePane.js'\nimport timesvg from '../../assets/time.svg'\nimport spacesvg from '../../assets/space.svg'\nimport actionsvg from '../../assets/action.svg'\nimport chancesvg from '../../assets/chance.svg'\nimport challengesvg from '../../assets/challenge.svg'\nimport strategysvg from '../../assets/strategy.svg'\nimport multiplayersvg from '../../assets/multiplayer.svg'\nimport trainingsvg from '../../assets/training.svg'\nimport greenTime from '../../assets/time_green.svg'\nimport goldTime from '../../assets/time_gold.svg'\nimport greenSpace from '../../assets/space_green.svg'\nimport goldSpace from '../../assets/space_gold.svg'\nimport greenChance from '../../assets/chance_green.svg'\nimport goldChance from '../../assets/chance_gold.svg'\nimport greenChallenge from '../../assets/challenge_green.svg'\nimport goldChallenge from '../../assets/challenge_gold.svg'\nimport greenAction from '../../assets/action_green.svg'\nimport goldAction from '../../assets/action_gold.svg'\nimport greenStrategy from '../../assets/strategy_green.svg'\nimport goldStrategy from '../../assets/strategy_gold.svg'\nimport greenTraining from '../../assets/training_green.svg'\nimport goldTraining from '../../assets/training_gold.svg'\nimport greenMultiplayer from '../../assets/multiplayer_green.svg'\nimport goldMultiplayer from '../../assets/multiplayer_gold.svg'\n\n\n\nclass MechanicsGrid extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      activeMech: props.mechanic,\n      activeMove: false,\n    }\n    this.onClick = this.onClick.bind(this)\n    console.log('constructor log = ' + props.mechanic);\n\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n  if (this.props.location !== prevProps.location || this.props.dChallenges !== prevProps.dChallenges || this.props.mechanic !== prevProps.mechanic) {\n     this.setState({\n       activeMech: this.props.mechanic,\n       activeMove: false,\n     })\n     console.log('update log = ' + this.props.mechanic);\n  }\n}\n\n  onClick = (move) => (e) => {\n    this.setState(\n      {\n        activeMove: move,\n      }\n    )\n  }\n\n\n  render() {\n\n    console.log('render state mech: ' + this.state.activeMech);\n    console.log('render prop mech: ' + this.props.mechanic);\n    console.log('here is dChallenges: ' + this.props.dChallenges);\n\n    let center\n    let background = this.props.backgroundColor\n    let title\n    let linkPath\n    if (this.props.dChallenges) {\n      center = <ChallengePane mechanic={this.state.activeMech} />\n      title = 'design challenges'\n      linkPath = '/tools/challenges/'\n    }\n    else {\n      center = <CenterPane mechanic={this.state.activeMech} move={this.state.activeMove} onClick={(e) => this.onClick(e)} />\n      title = 'the mechanics'\n      linkPath = '/mechanics/'\n    }\n\n    let gridColors = {\n      time: {\n        font: '#fcf5eb',\n        svg: timesvg,\n        green: greenTime,\n        gold: goldTime,\n      },\n      space: {\n        font: '#fcf5eb',\n        svg: spacesvg,\n        green: greenSpace,\n        gold: goldSpace,\n      },\n      chance: {\n        font: '#fcf5eb',\n        svg: chancesvg,\n        green: greenChance,\n        gold: goldChance,\n      },\n      action: {\n        font: '#fcf5eb',\n        svg: actionsvg,\n        green: greenAction,\n        gold: goldAction,\n      },\n      challenge: {\n        font: '#fcf5eb',\n        svg: challengesvg,\n        green: greenChallenge,\n        gold: goldChallenge,\n      },\n      training: {\n        font: '#fcf5eb',\n        svg: trainingsvg,\n        green: greenTraining,\n        gold: goldTraining,\n      },\n      strategy: {\n        font: '#fcf5eb',\n        svg: strategysvg,\n        green: greenStrategy,\n        gold: goldStrategy,\n      },\n      multiplayer: {\n        font: '#fcf5eb',\n        svg: multiplayersvg,\n        green: greenMultiplayer,\n        gold: goldMultiplayer,\n      },\n    }\n\n    for (var i = 0; i < Object.keys(gridColors).length; i++) {\n        if (this.state.activeMech === Object.keys(gridColors)[i] && !this.props.dChallenges) {\n          let key = Object.keys(gridColors)[i]\n          gridColors[key]['font'] = '#7fc8a0'\n          gridColors[key]['svg'] = gridColors[key]['green']\n        }\n        else if (this.state.activeMech === Object.keys(gridColors)[i] && this.props.dChallenges) {\n          let key = Object.keys(gridColors)[i]\n          gridColors[key]['font'] = '#e2af3b'\n          gridColors[key]['svg'] = gridColors[key]['gold']\n        }\n    }\n\n\n  return (\n    <div>\n      <div className=\"biggrid\" style={{backgroundColor: background}}>\n        <div id='mechanicstitle'>\n          <Link to='/'><div id='titleimg'></div></Link>\n          <div className='pageTitle'><Link to={linkPath}><h1 style={{color: background}}>{title}</h1></Link></div>\n          <div id='diceNav'>\n            <DiceNav path={this.props.location.pathname}/>\n          </div>\n        </div>\n\n        <div id='centerPane'>\n          {center}\n        </div>\n        <div id='dotsleftstrip'></div>\n        <div id='dotsrightstrip'></div>\n        <div className='grid9mech' id='mechanic1'>\n          <Link to={linkPath + 'time'}><img src={gridColors.time.svg} alt='hourglass' /></Link>\n          <Link className=\"mechLink\" to={linkPath + 'time'} style={{color: gridColors.time.font}}>Time</Link>\n        </div>\n        <div className='grid9mech' id=\"mechanic2\">\n          <Link to={linkPath + 'space'}><img src={gridColors.space.svg} alt='checkerboard' /></Link>\n          <Link className=\"mechLink\" to={linkPath + 'space'} style={{color: gridColors.space.font}}>Space</Link>\n        </div>\n        <div className='grid9mech' id='mechanic3'>\n          <Link to={linkPath + 'chance'}><img src={gridColors.chance.svg} alt='hand of cards' /></Link>\n          <Link className=\"mechLink\" to={linkPath + 'chance'} style={{color: gridColors.chance.font}}>Chance</Link>\n        </div>\n        <div className='grid9mech' id=\"mechanic4\">\n          <Link to={linkPath + 'action'}><img src={gridColors.action.svg} alt='dominos' /></Link>\n          <Link className=\"mechLink\" to={linkPath + 'action'} style={{color: gridColors.action.font}}>Action</Link>\n        </div>\n        <div className='grid9mech' id=\"mechanic5\">\n          <Link to={linkPath + 'challenge'}><img src={gridColors.challenge.svg} alt='mountain' /></Link>\n          <Link className=\"mechLink\" to={linkPath + 'challenge'} style={{color: gridColors.challenge.font}}>Challenge</Link>\n        </div>\n        <div className='grid9mech' id=\"mechanic6\">\n          <Link to={linkPath + 'training'}><img src={gridColors.training.svg} alt='checkerboard' /></Link>\n          <Link className=\"mechLink\" to={linkPath + 'training'} style={{color: gridColors.training.font}}>Training</Link>\n        </div>\n        <div className='grid9mech' id=\"mechanic8\">\n          <Link to={linkPath + 'strategy'}><img src={gridColors.strategy.svg} alt='chess knight' /></Link>\n          <Link className=\"mechLink\" to={linkPath + 'strategy'} style={{color: gridColors.strategy.font}}>Strategy</Link>\n        </div>\n        <div className='grid9mech' id=\"mechanic7\">\n          <Link to={linkPath + 'multiplayer'}><img src={gridColors.multiplayer.svg} alt='controllers' /></Link>\n          <Link className=\"mechLink\" to={linkPath + 'multiplayer'} style={{color: gridColors.multiplayer.font}}>Multiplayer</Link>\n        </div>\n      </div>\n</div>\n  );\n}\n}\n\nexport default (MechanicsGrid);\n"]},"metadata":{},"sourceType":"module"}