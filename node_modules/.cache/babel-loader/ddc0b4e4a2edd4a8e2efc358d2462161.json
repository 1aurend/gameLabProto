{"ast":null,"code":"var _jsxFileName = \"/Users/phil/Development/gameLabProto/src/components/mechanics/CenterPane.js\";\nimport React, { Component } from 'react';\nimport '../mechanics_grid.css';\nimport mechanicsList from './mechanicslist_clean.js';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport Collapsible from 'react-collapsible';\nimport wipsvg from \"../../assets/wip_gold.svg\";\n\nfunction findMechanic(name) {\n  for (var i = 0; i < mechanicsList.length; i++) {\n    if (name === mechanicsList[i].name) {\n      return mechanicsList[i];\n    }\n  }\n}\n\nfunction findMove(mech, move) {\n  for (var i = 0; i < mechanicsList.length; i++) {\n    if (mech === mechanicsList[i].name) {\n      for (var j = 0; j < mechanicsList[i].moves.length; j++) {\n        if (move === mechanicsList[i].moves[j].name) {\n          return mechanicsList[i].moves[j];\n        }\n      }\n    }\n  }\n\n  return {\n    name: 'coming soon!',\n    what: '',\n    effects: '',\n    examples: ''\n  };\n}\n\nfunction CenterPane(props) {\n  console.log('here is mech: ' + props.mechanic);\n  console.log('here is move: ' + props.move);\n  var mechUp = findMechanic(props.mechanic);\n  var moveUp = props.move ? findMove(props.mechanic, props.move) : false;\n  var movesColors = [];\n\n  if (props.mechanic !== 'mechanics' && mechUp.moves) {\n    for (var i = 0; i < mechUp.moves.length; i++) {\n      if (mechUp.moves[i].name === props.move) {\n        var move = {\n          name: mechUp.moves[i].name,\n          color: '#e2af3b'\n        };\n        movesColors.push(move);\n      } else {\n        var _move = {\n          name: mechUp.moves[i].name,\n          color: '#7fc8a0'\n        };\n        movesColors.push(_move);\n      }\n    }\n  }\n\n  var movesLinks = mechUp.moves ? movesColors.map(function (move) {\n    return React.createElement(\"h5\", {\n      className: \"movesLinksText\",\n      onClick: props.onClick(move.name),\n      key: move.name,\n      style: {\n        color: move.color\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, move.name));\n  }) : 'coming soon!';\n  var effects = moveUp.effects ? moveUp.effects.map(function (effect) {\n    return React.createElement(Collapsible, {\n      trigger: effect.what,\n      className: \"Collapsible__trigger\",\n      key: effect.what,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, effect.how.map(function (how) {\n      return React.createElement(\"li\", {\n        key: how,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, how);\n    })));\n  }) : 'coming soon!';\n  var examples = moveUp.examples ? moveUp.examples.map(function (example) {\n    return React.createElement(\"li\", {\n      key: example,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, example);\n  }) : 'coming soon!';\n\n  if (props.mechanic === 'mechanics') {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      id: \"activeMech\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, mechUp.name), React.createElement(\"div\", {\n      id: \"landingtext\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, mechUp.pitch), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, mechUp.structure), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, mechUp.go)));\n  } else if (!props.move && props.mechanic !== 'mechanics') {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      id: \"movesLinks\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, movesLinks), React.createElement(\"div\", {\n      id: \"activeMech\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, props.mechanic), React.createElement(\"div\", {\n      id: \"centertext\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"The Pitch\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, mechUp.pitch), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"What is it?\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, mechUp.what)));\n  } else if (props.move && effects !== 'coming soon!') {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      id: \"movesLinks\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, movesLinks), React.createElement(\"div\", {\n      id: \"activeMech\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: '/mechanics/' + mechUp.name,\n      onClick: props.onClick(false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, mechUp.name)), React.createElement(\"div\", {\n      id: \"centertext\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"What is it?\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, moveUp.what), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"What can it do and how?\"), effects));\n  } else if (props.move && effects === 'coming soon!') {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      id: \"movesLinks\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, movesLinks), React.createElement(\"div\", {\n      id: \"activeMech\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: '/mechanics/' + mechUp.name,\n      onClick: props.onClick(false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, mechUp.name)), React.createElement(\"div\", {\n      id: \"centertext\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: wipsvg,\n      alt: \"under construction\",\n      style: {\n        height: '100px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    })));\n  }\n}\n\nexport default withRouter(CenterPane);","map":{"version":3,"sources":["/Users/phil/Development/gameLabProto/src/components/mechanics/CenterPane.js"],"names":["React","Component","mechanicsList","Link","withRouter","Collapsible","findMechanic","name","i","length","findMove","mech","move","j","moves","what","effects","examples","CenterPane","props","console","log","mechanic","mechUp","moveUp","movesColors","color","push","movesLinks","map","onClick","effect","how","example","pitch","structure","go","wipsvg","height"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport '../mechanics_grid.css'\nimport mechanicsList from './mechanicslist_clean.js'\nimport { Link } from 'react-router-dom'\nimport { withRouter } from 'react-router-dom'\nimport Collapsible from 'react-collapsible'\nimport wipsvg from '../../assets/wip_gold.svg'\n\n\nfunction findMechanic (name) {\n  for (var i = 0; i < mechanicsList.length; i++) {\n    if (name === mechanicsList[i].name) {\n      return mechanicsList[i];\n    }\n  }\n}\n\nfunction findMove (mech, move) {\n  for (var i = 0; i < mechanicsList.length; i++) {\n    if (mech === mechanicsList[i].name) {\n      for (var j = 0; j < mechanicsList[i].moves.length; j++) {\n        if (move === mechanicsList[i].moves[j].name) {\n          return mechanicsList[i].moves[j];\n        }\n      }\n    }\n  }\n  return ({\n    name: 'coming soon!',\n    what: '',\n    effects: '',\n    examples: '',\n  })\n}\n\n\nfunction CenterPane (props) {\n\n  console.log('here is mech: ' + props.mechanic);\n  console.log('here is move: ' + props.move);\n\n  let mechUp = findMechanic(props.mechanic)\n  let moveUp = props.move ? findMove(props.mechanic, props.move) : false\n\n  let movesColors = []\n  if (props.mechanic !== 'mechanics' && mechUp.moves) {\n    for (var i = 0; i < mechUp.moves.length; i++) {\n      if (mechUp.moves[i].name === props.move) {\n        let move =\n        {\n          name: mechUp.moves[i].name,\n          color: '#e2af3b',\n        }\n        movesColors.push(move)\n      }\n      else {\n        let move =\n        {\n          name: mechUp.moves[i].name,\n          color: '#7fc8a0',\n        }\n        movesColors.push(move)\n      }\n    }\n  }\n\n\n  const movesLinks = mechUp.moves ? movesColors.map((move) => <h5 className='movesLinksText' onClick={props.onClick(move.name)} key={move.name} style={{color: move.color}}><span>{move.name}</span></h5> ) : 'coming soon!'\n\n  const effects = moveUp.effects ? moveUp.effects.map((effect) =>\n    <Collapsible trigger={effect.what} className='Collapsible__trigger' key={effect.what}>\n      <ul>\n      {effect.how.map((how) => <li key={how}>{how}</li>)}\n      </ul>\n    </Collapsible>)\n     : 'coming soon!'\n\n  const examples = moveUp.examples ? moveUp.examples.map((example) => <li key={example}>{example}</li>) : 'coming soon!'\n\n\n  if (props.mechanic === 'mechanics') {\n    return (\n    <>\n      <div id='activeMech'>\n        {mechUp.name}\n      </div>\n      <div id=\"landingtext\">\n        <p>{mechUp.pitch}</p>\n        <p>{mechUp.structure}</p>\n        <p>{mechUp.go}</p>\n      </div>\n    </>\n    )\n  }\n\n  else if (!props.move && props.mechanic !== 'mechanics') {\n\n    return (\n    <>\n      <div id='movesLinks'>\n        {movesLinks}\n      </div>\n      <div id='activeMech'>\n        {props.mechanic}\n      </div>\n      <div id=\"centertext\">\n        <h5>The Pitch</h5>\n        <p>{mechUp.pitch}</p>\n        <h5>What is it?</h5>\n        <p>{mechUp.what}</p>\n      </div>\n    </>\n    )\n  }\n\n  else if (props.move && effects !== 'coming soon!') {\n\n    return (\n    <>\n      <div id='movesLinks'>\n        {movesLinks}\n      </div>\n      <div id='activeMech'>\n        <Link to={'/mechanics/' + mechUp.name} onClick={props.onClick(false)}>{mechUp.name}</Link>\n      </div>\n      <div id=\"centertext\">\n        <h5>What is it?</h5>\n        <p>{moveUp.what}</p>\n        <h5>What can it do and how?</h5>\n          {effects}\n      </div>\n    </>\n    )\n  }\n\n  else if (props.move && effects === 'coming soon!') {\n\n    return (\n    <>\n      <div id='movesLinks'>\n        {movesLinks}\n      </div>\n      <div id='activeMech'>\n        <Link to={'/mechanics/' + mechUp.name} onClick={props.onClick(false)}>{mechUp.name}</Link>\n      </div>\n      <div id=\"centertext\">\n        <img src={wipsvg} alt=\"under construction\" style={{height: '100px'}}></img>\n      </div>\n    </>\n    )\n  }\n}\n\n\n\nexport default withRouter(CenterPane);\n"]},"metadata":{},"sourceType":"module"}