{"ast":null,"code":"var _jsxFileName = \"/Users/phil/Development/gameLabProto/src/components/subpages/Tetrad.js\";\nimport React from 'react';\nimport '../grids.css';\nimport tetradpng from '../../assets/color-tetrad-new.png';\nimport DiceNav from '../dice_nav/DiceNav.js';\nimport '../subpages.css';\nimport '../backgrounds.css';\nimport gameLab from \"../../assets/dev_subtitle.svg\";\nimport Collapsible from 'react-collapsible';\nimport { Link } from 'react-router-dom';\nimport playtest from \"../../assets/playtest.svg\";\nimport designchallenge from \"../../assets/designchallenge.svg\";\n\nfunction Tetrad(props) {\n  return React.createElement(\"div\", {\n    className: \"biggrid\",\n    style: {\n      backgroundColor: '#30AEA4'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"mechanicstitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"titleimg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"pageTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/tools/tetrad\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    style: {\n      color: '#30AEA4'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"the tetrad\"))), React.createElement(\"div\", {\n    id: \"subpageDiceNav\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(DiceNav, {\n    path: props.location.pathname,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    id: \"toolsNav\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"playtestrow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Link, {\n    className: \"imgLink\",\n    to: \"/tools/playtest\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: playtest,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })), React.createElement(Link, {\n    className: \"pLink\",\n    to: \"/tools/playtest\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"\\u201CPlaytest\\u201D\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), \"Your Assignment\"))), React.createElement(\"div\", {\n    id: \"designchallengerow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Link, {\n    className: \"imgLink\",\n    to: \"/tools/challenges\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: designchallenge,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })), React.createElement(Link, {\n    className: \"pLink\",\n    to: \"/tools/challenges\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Design\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), \"Challenges\")))), React.createElement(\"div\", {\n    id: \"dotsleftbenddownleft\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    id: \"dotsleftbendrightdown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    id: \"dotsrightstrip\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    id: \"seminarBlurb\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Schell\\u2019s tetrad is one way of breaking games down into components and analyzing the interactions between them. Analyzing your own classroom in this way is a great first step for thinking like a game designer. You can use the tetrad to analyze your course at the level of an entire syllabus, a single course meeting or unit, or something as small as a single assignment. Each level will yield distinct insights.\"), React.createElement(Collapsible, {\n    trigger: \"How do I start?\",\n    className: \"Collapsible__trigger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"This is the collapsible content. It can be any element or React component you like.\")), React.createElement(Collapsible, {\n    trigger: \"I know what Mechanics are, but what do you mean by the others?\",\n    className: \"Collapsible__trigger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"This is the collapsible content. It can be any element or React component you like.\")), React.createElement(Collapsible, {\n    trigger: \"I've filled out the tetrad for my class. Now what?\",\n    className: \"Collapsible__trigger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"This is the collapsible content. It can be any element or React component you like.\"))), React.createElement(\"div\", {\n    id: \"tetradpng\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: tetradpng,\n    alt: \"tetrad\",\n    style: {\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })));\n}\n\nexport default Tetrad;","map":{"version":3,"sources":["/Users/phil/Development/gameLabProto/src/components/subpages/Tetrad.js"],"names":["React","tetradpng","DiceNav","Collapsible","Link","Tetrad","props","backgroundColor","color","location","pathname","playtest","designchallenge","width"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../grids.css'\nimport tetradpng from '../../assets/color-tetrad-new.png'\nimport DiceNav from '../dice_nav/DiceNav.js'\nimport '../subpages.css'\nimport '../backgrounds.css'\nimport gameLab from '../../assets/dev_subtitle.svg'\nimport Collapsible from 'react-collapsible'\nimport { Link } from 'react-router-dom'\nimport playtest from '../../assets/playtest.svg'\nimport designchallenge from '../../assets/designchallenge.svg'\n\n\nfunction Tetrad (props) {\n\n  return(\n    <div className=\"biggrid\" style={{backgroundColor: '#30AEA4'}}>\n\n      <div id='mechanicstitle'>\n        <Link to='/'><div id='titleimg'></div></Link>\n        <div className='pageTitle'><Link to='/tools/tetrad'><h1 style={{color: '#30AEA4'}}>the tetrad</h1></Link></div>\n        <div id='subpageDiceNav'>\n          <DiceNav path={props.location.pathname}/>\n        </div>\n      </div>\n      <div id='toolsNav'>\n        <div id='playtestrow'>\n          <Link className='imgLink' to='/tools/playtest'><img src={ playtest } /></Link>\n          <Link className='pLink' to='/tools/playtest'><h4>“Playtest”<br />Your Assignment</h4></Link>\n        </div>\n        <div id='designchallengerow'>\n          <Link className='imgLink' to='/tools/challenges'><img src={ designchallenge } /></Link>\n          <Link className='pLink' to='/tools/challenges'><h4>Design<br />Challenges</h4></Link>\n        </div>\n      </div>\n      <div id='dotsleftbenddownleft'></div>\n      <div id='dotsleftbendrightdown'></div>\n      <div id='dotsrightstrip'></div>\n\n      <div id='seminarBlurb'>\n        <p>Schell’s tetrad is one way of breaking games down into components and analyzing the interactions between them. Analyzing your own classroom in this way is a great first step for thinking like a game designer. You can use the tetrad to analyze your course at the level of an entire syllabus, a single course meeting or unit, or something as small as a single assignment. Each level will yield distinct insights.\n        </p>\n        <Collapsible trigger=\"How do I start?\" className='Collapsible__trigger'>\n          <p>This is the collapsible content. It can be any element or React component you like.</p>\n        </Collapsible>\n        <Collapsible trigger=\"I know what Mechanics are, but what do you mean by the others?\" className='Collapsible__trigger'>\n          <p>This is the collapsible content. It can be any element or React component you like.</p>\n        </Collapsible>\n        <Collapsible trigger=\"I've filled out the tetrad for my class. Now what?\" className='Collapsible__trigger'>\n          <p>This is the collapsible content. It can be any element or React component you like.</p>\n        </Collapsible>\n      </div>\n      <div id='tetradpng'>\n        <img src={tetradpng} alt='tetrad' style={{width: '100%'}}/>\n\n      </div>\n    </div>\n)\n\n}\n\nexport default Tetrad;\n"]},"metadata":{},"sourceType":"module"}